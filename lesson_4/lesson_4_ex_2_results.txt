Для исследуемого промежутка индексов
функция sieve на основе алгоритма Эратосфена имеет линейную асимптотику и явно эффективней, чем
функции prime, которая на исследуемом промежутке показывает квадратичную сложность


# Вариант sieve

# sieve(1000) - 0.354743400006555
# sieve(2000) - 1.5954659999988507
# sieve(3000) - 2.2755633000051603
# sieve(4000) - 3.0938098000042373
# sieve(5000) - 3.9886113999964437
# sieve(6000) - 4.807548400000087
# sieve(7000) - 5.524040499993134
# sieve(8000) - 6.313198399991961
# sieve(9000) - 6.950804599997355
# sieve(10000) - 8.085351100002299
# cProfile.run(f'sieve(10_000)'
#          160013 function calls in 0.115 seconds
#
#    Ordered by: standard name
#
#    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
#         1    0.001    0.001    0.115    0.115 <string>:1(<module>)
#         5    0.007    0.001    0.007    0.001 lesson_4_ex_2_sieve.py:21(<listcomp>)
#         1    0.095    0.095    0.114    0.114 lesson_4_ex_2_sieve.py:6(sieve)
#         1    0.000    0.000    0.115    0.115 {built-in method builtins.exec}
#         5    0.000    0.000    0.000    0.000 {built-in method builtins.len}
#    159999    0.011    0.000    0.011    0.000 {method 'append' of 'list' objects}
#         1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# Вариант prime

# prime(1000) - 2.3013833000004524
# prime(2000) - 8.927259599993704
# prime(3000) - 19.235005299997283
# prime(4000) - 34.29579800000647
# prime(5000) - 52.45093009999255
# prime(6000) - 68.55416920001153
# prime(7000) - 93.47470050000993
# prime(8000) - 128.0063924999995
# prime(9000) - 161.53335209999932
# prime(10000) - 190.59898599999724
# cProfile.run(f'prime(10_000)'
#          10003 function calls in 2.210 seconds
#
#    Ordered by: standard name
#
#    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
#         1    0.000    0.000    2.210    2.210 <string>:1(<module>)
#         1    2.209    2.209    2.210    2.210 lesson_4_ex_2_prime.py:6(prime)
#         1    0.000    0.000    2.210    2.210 {built-in method builtins.exec}
#      9999    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
#         1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}